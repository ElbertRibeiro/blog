"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[4912],{3905:(e,r,t)=>{t.d(r,{Zo:()=>u,kt:()=>f});var n=t(7294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=n.createContext({}),c=function(e){var r=n.useContext(s),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},u=function(e){var r=c(e.components);return n.createElement(s.Provider,{value:r},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},d=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=c(t),d=a,f=p["".concat(s,".").concat(d)]||p[d]||m[d]||o;return t?n.createElement(f,i(i({ref:r},u),{},{components:t})):n.createElement(f,i({ref:r},u))}));function f(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=d;var l={};for(var s in r)hasOwnProperty.call(r,s)&&(l[s]=r[s]);l.originalType=e,l[p]="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=t[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}d.displayName="MDXCreateElement"},7297:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var n=t(7462),a=(t(7294),t(3905));const o={slug:"docker-with-terraform",title:"Using Terraform with Docker",authors:["elbert"],tags:["docker","terraform","IaC"]},i=void 0,l={permalink:"/site/blog/docker-with-terraform",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2024-07-12-docker-with-terraform/index.md",source:"@site/blog/2024-07-12-docker-with-terraform/index.md",title:"Using Terraform with Docker",description:"What is Terraform?",date:"2024-07-12T00:00:00.000Z",formattedDate:"July 12, 2024",tags:[{label:"docker",permalink:"/site/blog/tags/docker"},{label:"terraform",permalink:"/site/blog/tags/terraform"},{label:"IaC",permalink:"/site/blog/tags/ia-c"}],readingTime:5.26,hasTruncateMarker:!1,authors:[{name:"Elbert Ribeiro",title:"Back End Engineer",url:"https://github.com/ElbertRibeiro",imageURL:"https://avatars.githubusercontent.com/u/45343415?v=4",key:"elbert"}],frontMatter:{slug:"docker-with-terraform",title:"Using Terraform with Docker",authors:["elbert"],tags:["docker","terraform","IaC"]},nextItem:{title:"Spring Boot DDD Factory",permalink:"/site/blog/design-pattern-factory"}},s={authorsImageUrls:[void 0]},c=[{value:"What is Terraform?",id:"what-is-terraform",level:2},{value:"Using Terraform with Docker",id:"using-terraform-with-docker",level:2},{value:"Technical Details",id:"technical-details",level:2},{value:"How does Terraform work?",id:"how-does-terraform-work",level:2},{value:"Terraform Resources",id:"terraform-resources",level:2},{value:"Summary of Relationships",id:"summary-of-relationships",level:3},{value:"Using Terraform with Docker",id:"using-terraform-with-docker-1",level:2},{value:"Docker Provider",id:"docker-provider",level:3},{value:"Docker Resource",id:"docker-resource",level:3},{value:"Conclusion",id:"conclusion",level:2}],u={toc:c},p="wrapper";function m(e){let{components:r,...t}=e;return(0,a.kt)(p,(0,n.Z)({},u,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"what-is-terraform"},"What is Terraform?"),(0,a.kt)("p",null,"According to the ",(0,a.kt)("a",{parentName:"p",href:"https://www.ibm.com/br-pt/topics/terraform"},"IBM website"),", ",(0,a.kt)("strong",{parentName:"p"},"Terraform")," is an IaC (Infrastructure as\nCode) tool that enables the creation, modification, and versioning of infrastructure safely and efficiently."),(0,a.kt)("h2",{id:"using-terraform-with-docker"},"Using Terraform with Docker"),(0,a.kt)("p",null,"This article aims to broaden the reader's horizons so that they can perceive the great utility that a tool like\n",(0,a.kt)("strong",{parentName:"p"},"Terraform")," has in the daily life of a developer and/or DevOps professional."),(0,a.kt)("p",null,"In this article, I will not address complex problems that the tool can solve. My goal here is to provide the reader with\na first contact with the solution. Best practices and better usage will be topics addressed in future articles."),(0,a.kt)("h2",{id:"technical-details"},"Technical Details"),(0,a.kt)("p",null,"The source code generated in this article was created using a ",(0,a.kt)("inlineCode",{parentName:"p"},"Windowns 11 Amd64")," machine, and the version of",(0,a.kt)("br",{parentName:"p"}),"\n",(0,a.kt)("em",{parentName:"p"},"Terraform")," installed is ",(0,a.kt)("inlineCode",{parentName:"p"},"v1.9.2"),"."),(0,a.kt)("h2",{id:"how-does-terraform-work"},"How does Terraform work?"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Defining the Infrastructure:\nYou write configuration files using Terraform's configuration language (HCL) or JSON. These files define the\ninfrastructure resources you want to create, such as virtual machines, networks, and databases, along with their\nproperties.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Initialization:\nBefore applying the configurations, you run ",(0,a.kt)("inlineCode",{parentName:"p"},"terraform init"),". This command initializes Terraform's working\ndirectory,\ndownloads the necessary providers, and prepares the environment.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Planning:\nWith the ",(0,a.kt)("inlineCode",{parentName:"p"},"terraform plan")," command, Terraform analyzes the configurations and generates an execution plan. The plan\nshows the changes that will be made to the infrastructure, so you can review them before applying.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Application:\nAfter reviewing the plan, you execute ",(0,a.kt)("inlineCode",{parentName:"p"},"terraform apply"),". Terraform applies the changes according to the generated\nplan, creating, modifying, or deleting resources as needed.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Management:\nTerraform maintains the state of your infrastructure in a state file. This file is used to track changes between the\nconfiguration and the real infrastructure, allowing Terraform to make incremental updates and maintain consistency.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Destruction:\nWhen you need to remove the infrastructure, you can use the ",(0,a.kt)("inlineCode",{parentName:"p"},"terraform destroy"),"command. This command removes all\nresources defined in your configurations."))),(0,a.kt)("h2",{id:"terraform-resources"},"Terraform Resources"),(0,a.kt)("p",null,"Below I will list some of the resources of ",(0,a.kt)("strong",{parentName:"p"},"Terraform"),":"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"required_providers"),":"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Purpose: Specifies which providers are necessary for your Terraform configuration and which versions of these\nproviders should be used."),(0,a.kt)("li",{parentName:"ul"},"Location: Usually found within the terraform block in a .tf file."),(0,a.kt)("li",{parentName:"ul"},"Components:",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},'Source: Defines the provider\'s source (e.g., "hashicorp/aws").'),(0,a.kt)("li",{parentName:"ul"},'Version: Defines the desired version of the provider (e.g., "~> 3.0").'))),(0,a.kt)("li",{parentName:"ul"},"Example:",(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-hcl"},'terraform {\n  required_providers {\n    aws = {\n      source  = "hashicorp/aws"\n      version = "~> 3.0"\n    }\n  }\n}\n'))))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"provider"),":"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Purpose: Configures and authenticates the infrastructure provider that Terraform will use to create and manage\nresources. The provider is responsible for interacting with external APIs."),(0,a.kt)("li",{parentName:"ul"},"Location: Defined in a provider block in a .tf file."),(0,a.kt)("li",{parentName:"ul"},"Components:",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},'provider: Name of the provider (e.g., "aws").'),(0,a.kt)("li",{parentName:"ul"},'region: Specific provider configuration (e.g., "us-west-1" for AWS).'))),(0,a.kt)("li",{parentName:"ul"},"Example:",(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-hcl"},'provider "aws" {\nregion = "us-west-1"\n}\n'))))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"resource")),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Purpose: Defines a specific resource that you want to create, modify, or delete in your infrastructure. Resources\nare the main elements you manage with Terraform."),(0,a.kt)("li",{parentName:"ul"},"Location: Defined in a resource block in a .tf file."),(0,a.kt)("li",{parentName:"ul"},"Components:",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},'resource: Type of resource and name (e.g., "aws_instance" "example").'),(0,a.kt)("li",{parentName:"ul"},"ami: Specific property of the resource (e.g., AMI image ID for AWS)."),(0,a.kt)("li",{parentName:"ul"},"instance_type: Another specific property (e.g., EC2 instance type)."))),(0,a.kt)("li",{parentName:"ul"},"Example:",(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-hcl"},'resource "aws_instance" "example" {\nami           = "ami-0c55b159cbfafe1f0"\ninstance_type = "t2.micro"\n}\n')))))),(0,a.kt)("h3",{id:"summary-of-relationships"},"Summary of Relationships"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"required_providers")," define which providers and their versions are necessary for the configuration, ensuring that\nall necessary components are available and in the correct version.\nThe ",(0,a.kt)("inlineCode",{parentName:"p"},"provider")," configures how Terraform communicates with a specific provider (such as AWS, Azure, Google Cloud) and\ndefines essential parameters for authentication and configuration.\nThe ",(0,a.kt)("inlineCode",{parentName:"p"},"resource")," block is where you define the specific details of the resources you want to create, manage, or delete\nin your infrastructure."),(0,a.kt)("h2",{id:"using-terraform-with-docker-1"},"Using Terraform with Docker"),(0,a.kt)("p",null,"Now let's talk about the main topic, which motivated the creation of this article."),(0,a.kt)("p",null,"Since Terraform is a powerful tool for IaC, it is possible to create both complex and simple infrastructures (as in the\nfollowing example)."),(0,a.kt)("p",null,"Imagine you need to maintain a source code of an infrastructure. In this case, you could choose to use docker-compose\nand use git for this purpose, but we know that for more complex cases, it may not be sufficient."),(0,a.kt)("h3",{id:"docker-provider"},"Docker Provider"),(0,a.kt)("p",null,"Providers are important resources when creating infrastructure. On\nthe ",(0,a.kt)("a",{parentName:"p",href:"https://registry.terraform.io/browse/providers"},"Terraform website"),", you can find several providers for the most\npopular infrastructure providers.\nTo create a Docker infrastructure, we will use the ",(0,a.kt)("inlineCode",{parentName:"p"},"kreuzwerker/docker provider"),", as shown in the example below:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-terraform"},'terraform {\n  required_providers {\n    docker = {\n      source  = "kreuzwerker/docker"\n      version = "~> 2.15"\n    }\n  }\n}\n')),(0,a.kt)("p",null,"To use the local Docker, use the code below:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-terraform"},'# Win11\nprovider "docker" {\n  host = "npipe:////./pipe/docker_engine"\n}\n')),(0,a.kt)("h3",{id:"docker-resource"},"Docker Resource"),(0,a.kt)("p",null,"Just like in a manual process, it is important to create the infrastructure sequentially and step by step. The first\nthing to do in building a container is to pull the base image. To download an image using Terraform, simply use the\n",(0,a.kt)("inlineCode",{parentName:"p"},"resource")," below:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-terraform"},'# Pulls the image\nresource "docker_image" "ubuntu" {\n  name = "ubuntu:latest"\n}\n')),(0,a.kt)("hr",null),(0,a.kt)("p",null,"To build the container, we will also use the ",(0,a.kt)("inlineCode",{parentName:"p"},"resource"),". As it is a container, our resource will contain some\nadditional\nproperties, such as container name and commands. However, it is important to define dependencies between the resources\nso that they are executed in the correct order, as shown in the example below:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-terraform"},'# Create a container\nresource "docker_container" "teste_linux" {\n  image = docker_image.ubuntu.image_id\n  name  = "teste_linux"\n  depends_on = [ docker_image.ubuntu ]\n  command = [ "sleep", "infinity" ]\n}\n')),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"conclusion"},"Conclusion"),(0,a.kt)("p",null,"Finally, we have our complete file below:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-terraform"},'# main.tf\n\nterraform {\n  required_providers {\n    docker = {\n      source  = "kreuzwerker/docker"\n      version = "~> 2.15"\n    }\n  }\n}\n\n# Win11\nprovider "docker" {\n  host = "npipe:////./pipe/docker_engine"\n}\n\n\n# Pulls the image\nresource "docker_image" "ubuntu" {\n  name = "ubuntu:latest"\n}\n\n# Create a container\nresource "docker_container" "teste_linux" {\n  image = docker_image.ubuntu.image_id\n  name  = "teste_linux"\n  depends_on = [ docker_image.ubuntu ]\n  command = [ "sleep", "infinity" ]\n}\n\n')),(0,a.kt)("p",null,"As mentioned above, to execute the infrastructure, simply run the commands: ",(0,a.kt)("inlineCode",{parentName:"p"},"terraform init")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"terraform apply"),"."),(0,a.kt)("p",null,"Once done, you will have your complete infrastructure based on Terraform."))}m.isMDXComponent=!0}}]);